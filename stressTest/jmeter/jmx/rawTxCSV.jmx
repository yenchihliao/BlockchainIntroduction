<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
	<hashTree>
		<TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Geth JRPC" enabled="true">
			<stringProp name="TestPlan.comments"></stringProp>
			<boolProp name="TestPlan.functional_mode">false</boolProp>
			<boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
			<boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
			<elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
				<collectionProp name="Arguments.arguments"/>
			</elementProp>
			<stringProp name="TestPlan.user_define_classpath"></stringProp>
		</TestPlan>
		<hashTree>
			<ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Users" enabled="true">
				<stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
				<elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
					<boolProp name="LoopController.continue_forever">false</boolProp>
					<stringProp name="LoopController.loops">1</stringProp>
				</elementProp>
				<stringProp name="ThreadGroup.num_threads">300</stringProp>
				<stringProp name="ThreadGroup.ramp_time">1</stringProp>
				<boolProp name="ThreadGroup.scheduler">false</boolProp>
				<stringProp name="ThreadGroup.duration"></stringProp>
				<stringProp name="ThreadGroup.delay"></stringProp>
				<boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
			</ThreadGroup>
			<hashTree>
				<HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTPRequest" enabled="true">
					<boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
					<elementProp name="HTTPsampler.Arguments" elementType="Arguments">
						<collectionProp name="Arguments.arguments">
							<elementProp name="" elementType="HTTPArgument">
								<boolProp name="HTTPArgument.always_encode">false</boolProp>
								<stringProp name="Argument.value">{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;${method}&quot;,&quot;params&quot;:[&quot;${params}&quot;],&quot;id&quot;:1}</stringProp>
								<stringProp name="Argument.metadata">=</stringProp>
							</elementProp>
						</collectionProp>
					</elementProp>
					<stringProp name="HTTPSampler.domain">localhost</stringProp>
					<stringProp name="HTTPSampler.port">8080</stringProp>
					<stringProp name="HTTPSampler.protocol"></stringProp>
					<stringProp name="HTTPSampler.contentEncoding"></stringProp>
					<stringProp name="HTTPSampler.path">/</stringProp>
					<stringProp name="HTTPSampler.method">POST</stringProp>
					<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
					<boolProp name="HTTPSampler.auto_redirects">false</boolProp>
					<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
					<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
					<boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
					<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
					<stringProp name="HTTPSampler.connect_timeout"></stringProp>
					<stringProp name="HTTPSampler.response_timeout"></stringProp>
					<stringProp name="TestPlan.comments">HTTP post request for eth.getBalance</stringProp>
				</HTTPSamplerProxy>
				<hashTree>
					<CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
						<stringProp name="delimiter">\t</stringProp>
						<stringProp name="fileEncoding"></stringProp>
						<stringProp name="filename">./data/rawTx.csv</stringProp>


						<boolProp name="ignoreFirstLine">false</boolProp>
						<boolProp name="quotedData">false</boolProp>
						<boolProp name="recycle">true</boolProp>
						<stringProp name="shareMode">shareMode.all</stringProp>
						<boolProp name="stopThread">false</boolProp>
						<stringProp name="variableNames"></stringProp>
					</CSVDataSet>
					<hashTree/>
					<HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="json header" enabled="true">
						<collectionProp name="HeaderManager.headers">
							<elementProp name="" elementType="Header">
								<stringProp name="Header.name">content-type</stringProp>
								<stringProp name="Header.value">application/json</stringProp>
							</elementProp>
						</collectionProp>
					</HeaderManager>
					<hashTree/>
					<BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
						<stringProp name="filename"></stringProp>
						<stringProp name="parameters"></stringProp>
						<boolProp name="resetInterpreter">false</boolProp>
						<stringProp name="script">//https://stackoverflow.com/questions/24512365/jmeter-run-a-python-script-before-calling-each-http-request-sampler
import java.io.BufferedReader;
import java.io.InputStreamReader;

Runtime r = Runtime.getRuntime();
Process p = r.exec(&quot;/usr/bin/python /path/to/your/script.py&quot;);
p.waitFor();
BufferedReader b = new BufferedReader(new InputStreamReader(p.getInputStream()));
String line = &quot;&quot;;
StringBuilder response = new StringBuilder();
while ((line = b.readLine()) != null) {
response.append(line);
}

b.close();
vars.put(&quot;ID&quot;,response.toString());
</stringProp>
		  </BeanShellPreProcessor>
		  <hashTree/>
		  <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="TreeListener" enabled="true">
			  <boolProp name="ResultCollector.error_logging">false</boolProp>
			  <objProp>
				  <name>saveConfig</name>
				  <value class="SampleSaveConfiguration">
					  <time>false</time>
					  <latency>false</latency>
					  <timestamp>false</timestamp>
					  <success>false</success>
					  <label>false</label>
					  <code>false</code>
					  <message>false</message>
					  <threadName>false</threadName>
					  <dataType>false</dataType>
					  <encoding>false</encoding>
					  <assertions>false</assertions>
					  <subresults>false</subresults>
					  <responseData>true</responseData>
					  <samplerData>true</samplerData>
					  <xml>true</xml>
					  <fieldNames>false</fieldNames>
					  <responseHeaders>true</responseHeaders>
					  <requestHeaders>true</requestHeaders>
					  <responseDataOnError>false</responseDataOnError>
					  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
					  <assertionsResultsToSave>0</assertionsResultsToSave>
				  </value>
			  </objProp>
			  <stringProp name="filename">./report/reportTree.xml</stringProp>
		  </ResultCollector>
		  <hashTree/>
		  <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="TableListener" enabled="true">
			  <boolProp name="ResultCollector.error_logging">false</boolProp>
			  <objProp>
				  <name>saveConfig</name>
				  <value class="SampleSaveConfiguration">
					  <time>true</time>
					  <latency>true</latency>
					  <timestamp>true</timestamp>
					  <success>true</success>
					  <label>true</label>
					  <code>true</code>
					  <message>true</message>
					  <threadName>true</threadName>
					  <dataType>true</dataType>
					  <encoding>false</encoding>
					  <assertions>true</assertions>
					  <subresults>true</subresults>
					  <responseData>false</responseData>
					  <samplerData>false</samplerData>
					  <xml>false</xml>
					  <fieldNames>true</fieldNames>
					  <responseHeaders>false</responseHeaders>
					  <requestHeaders>false</requestHeaders>
					  <responseDataOnError>false</responseDataOnError>
					  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
					  <assertionsResultsToSave>0</assertionsResultsToSave>
					  <bytes>true</bytes>
					  <sentBytes>true</sentBytes>
					  <url>true</url>
					  <threadCounts>true</threadCounts>
					  <idleTime>true</idleTime>
					  <connectTime>true</connectTime>
				  </value>
			  </objProp>
			  <stringProp name="filename">./report/reportTable.csv</stringProp>
		  </ResultCollector>
		  <hashTree/>
		  <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="true">
			  <stringProp name="FileSaver.filename">./report/response</stringProp>
			  <boolProp name="FileSaver.errorsonly">false</boolProp>
			  <boolProp name="FileSaver.successonly">false</boolProp>
			  <boolProp name="FileSaver.skipsuffix">false</boolProp>
			  <boolProp name="FileSaver.skipautonumber">false</boolProp>
			  <boolProp name="FileSaver.ignoreTC">false</boolProp>
			  <stringProp name="FileSaver.variablename">RESPONSE</stringProp>
		  </ResultSaver>
		  <hashTree/>
	  </hashTree>
  </hashTree>
	</hashTree>
</hashTree>
</jmeterTestPlan>

